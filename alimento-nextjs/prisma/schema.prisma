generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Customer {
  id   String @id @default(uuid()) @map("_id")
  name String

  email String  @unique
  otp   String?
  role  String  @default("customer")

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Vendor {
  id   String @id @default(uuid()) @map("_id")
  name String

  email String  @unique
  otp   String?
  role  String  @default("vendor")

  dishes Dish[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Category {
  APPETIZER
  MAIN_COURSE
  DESSERT
  BEVERAGE
  SNACK
}

enum Tag {
  SPICY
  VEGETARIAN
  VEGAN
  GLUTEN_FREE
  DAIRY_FREE
  NUT_FREE
  INDIAN
  CHINESE
  ITALIAN
  ARABIC
}

model Dish {
  id          String   @id @default(uuid()) @map("_id")
  name        String
  description String
  price       Float
  category    Category
  tags        Tag[]

  images Image[]

  vendorId String
  vendor   Vendor @relation(fields: [vendorId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Image {
  id        String   @id @default(uuid()) @map("_id")
  dishId    String
  dish      Dish     @relation(fields: [dishId], references: [id], onDelete: Cascade)
  url       String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


model Question {
  id        String   @id @default(cuid()) @map("_id")
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  answers   Answer[] @relation("QuestionAnswers") // Removed onDelete: Cascade from here
  answered  Boolean  @default(false)
}

model Answer {
  id         String   @id @default(cuid()) @map("_id")
  content    String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  questionId String
  question   Question @relation("QuestionAnswers", fields: [questionId], references: [id], onDelete: Cascade) // Moved onDelete: Cascade to this side
}
